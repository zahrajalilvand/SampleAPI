// <auto-generated />
using APISample.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace APISample.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    partial class ApplicationDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("APISample.Models.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Tehran Is capital of Iran",
                            Name = "Tehran"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Tabriz is a big city",
                            Name = "Tabriz"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Tabriz is a big city",
                            Name = "Shiraz"
                        });
                });

            modelBuilder.Entity("APISample.Models.Entities.PointOfIntrest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("PointOfIntrests");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityId = 1,
                            Description = "Meydan Azadi",
                            Name = "Borje Azadi"
                        },
                        new
                        {
                            Id = 2,
                            CityId = 1,
                            Description = "Fazollah Highway",
                            Name = "Borje Milad"
                        },
                        new
                        {
                            Id = 3,
                            CityId = 2,
                            Description = "Il Goli sq",
                            Name = "Il Goli"
                        },
                        new
                        {
                            Id = 4,
                            CityId = 3,
                            Description = "Eram st",
                            Name = "Baghe Eram"
                        });
                });

            modelBuilder.Entity("APISample.Models.Entities.PointOfIntrest", b =>
                {
                    b.HasOne("APISample.Models.Entities.City", "city")
                        .WithMany("pointOfIntrests")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("city");
                });

            modelBuilder.Entity("APISample.Models.Entities.City", b =>
                {
                    b.Navigation("pointOfIntrests");
                });
#pragma warning restore 612, 618
        }
    }
}
